// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using rh.Models;
using System;

namespace rh.Migrations
{
    [DbContext(typeof(RhContext))]
    [Migration("20180330092634_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("rh.Models.Image", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ImageType");

                    b.Property<string>("code");

                    b.Property<int>("pageId");

                    b.HasKey("ID");

                    b.HasIndex("pageId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("rh.Models.Info", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("commentaire");

                    b.Property<int>("infoPageType");

                    b.Property<int>("pageId");

                    b.HasKey("ID");

                    b.HasIndex("pageId");

                    b.ToTable("Info");
                });

            modelBuilder.Entity("rh.Models.Lien", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("commentaire");

                    b.Property<int>("entreePageId");

                    b.Property<int>("sortiePageId");

                    b.HasKey("ID");

                    b.HasIndex("entreePageId");

                    b.HasIndex("sortiePageId");

                    b.ToTable("Lien");
                });

            modelBuilder.Entity("rh.Models.Module", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("code");

                    b.Property<string>("nom");

                    b.Property<int>("projetId");

                    b.HasKey("ID");

                    b.HasIndex("projetId");

                    b.ToTable("Module");
                });

            modelBuilder.Entity("rh.Models.Page", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("code");

                    b.Property<string>("description");

                    b.Property<int>("moduleId");

                    b.Property<string>("nom");

                    b.Property<int>("utilisateur");

                    b.HasKey("ID");

                    b.HasIndex("moduleId");

                    b.ToTable("Page");
                });

            modelBuilder.Entity("rh.Models.Projet", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("nom");

                    b.HasKey("ID");

                    b.ToTable("Projet");
                });

            modelBuilder.Entity("rh.Models.Image", b =>
                {
                    b.HasOne("rh.Models.Page", "page")
                        .WithMany("images")
                        .HasForeignKey("pageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("rh.Models.Info", b =>
                {
                    b.HasOne("rh.Models.Page", "page")
                        .WithMany("infos")
                        .HasForeignKey("pageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("rh.Models.Lien", b =>
                {
                    b.HasOne("rh.Models.Page", "entreePage")
                        .WithMany("entreeLiens")
                        .HasForeignKey("entreePageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("rh.Models.Page", "sortiePage")
                        .WithMany("sortieLiens")
                        .HasForeignKey("sortiePageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("rh.Models.Module", b =>
                {
                    b.HasOne("rh.Models.Projet", "projet")
                        .WithMany("modules")
                        .HasForeignKey("projetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("rh.Models.Page", b =>
                {
                    b.HasOne("rh.Models.Module", "module")
                        .WithMany("pages")
                        .HasForeignKey("moduleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
